<!--
  Copyright 2018 Google Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="org.calyxos.blossom">

    <uses-permission android:name="android.permission.INTERNET"/>

    <application
        android:allowBackup="true"
        android:label="@string/app_name"
        android:icon="@mipmap/source_ic_launcher"
        tools:ignore="GoogleAppIndexingWarning">

        <activity
            android:name=".BlossomRedirectActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" >

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!--<activity-alias
            android:name=".BlossomLauncherActivity"
            android:enabled="@bool/enable_launcher"
            android:targetActivity=".BlossomRedirectActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity-alias> Had a lot of difficulties with this. When trying to run the app on a device, it kept throwing Activity class
        doesn't exist error. The alias is just a name not a real class. So I have switched back to the normal to be able to run
        until a solution is found-->

        <service
            android:name="org.calyxos.blossom.BlossomArtSource"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.apps.muzei.api.MuzeiArtSource"/>
            </intent-filter>
            <meta-data
                android:name="replacement"
                android:value="${blossomAuthority}"/>
        </service>

        <provider
            android:name="org.calyxos.blossom.BlossomArtProvider"
            android:authorities="${blossomAuthority}"
            android:label="@string/name"
            android:description="@string/description"
            android:exported="true"
            android:permission="com.google.android.apps.muzei.api.ACCESS_PROVIDER">
            <intent-filter>
                <action android:name="com.google.android.apps.muzei.api.MuzeiArtProvider"/>
            </intent-filter>
        </provider>

        <provider
            android:name="com.google.android.apps.muzei.api.provider.MuzeiArtDocumentsProvider"
            android:authorities="${blossomAuthority}.documents"
            android:exported="true"
            android:grantUriPermissions="true"
            android:permission="android.permission.MANAGE_DOCUMENTS">
            <intent-filter>
                <action android:name="android.content.action.DOCUMENTS_PROVIDER" />
            </intent-filter>
        </provider>

    </application>

</manifest>
